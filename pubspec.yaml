name: gitle
description: Git project.
publish_to: 'none'
version: 0.1.0+1

environment:
  sdk: '>=3.2.0 <3.4.0'
  flutter: '>=3.19.0 <3.20.0'

scripts:
  # To initialize project and dependencies
  bootstrap: dart pub global activate rps 0.7.0

  # To generate .g files:
  generate-code: dart run build_runner watch --delete-conflicting-outputs

  generate-launcher-icons: >-
    dart pub global activate flutter_launcher_icons 0.13.1 &&
    dart pub global run flutter_launcher_icons

  deploy: >-
    flutter build macos &&
    rm -r ~/Desktop/Gitle.app &&
    mv ./build/macos/Build/Products/Release/Gitle.app ~/Desktop/Gitle.app

  recreate-project: flutter create --platforms=windows,macos --org=com.doonties --project-name=hasd .

  # Integration tools
  integration: rps check-format && rps analyze
  check-format: >-
    dart format --line-length 100 --set-exit-if-changed --output none
    $(find . ! -path "./.dart_tool/**" ! -path "./build/**" -name "*.dart" ! -name "*.g.dart")
  analyze: flutter analyze --no-fatal-infos

dependencies:
  flutter: { sdk: flutter }
  flutter_localizations: { sdk: flutter }

  # Flutter Data
  file_picker: ^6.2.0
  github: ^9.24.0
  flutter_local_notifications: ^17.0.0
  url_launcher: ^6.2.5

  # Dart
  path: ^1.9.0
  git: ^2.2.1
  collection: ^1.18.0
  logging: ^1.2.0
  rxdart: ^0.27.7
  pure_extensions: ^5.0.0
  fast_immutable_collections: ^10.2.1

  # Dart UI
  intl: 0.18.1
  # Flutter UI
  flutter_riverpod: ^2.5.1
  window_manager: ^0.3.8
  multi_split_view: ^2.4.0

  mek_data_class: ^1.4.0

  mek: { path: ../packages/mek_framework }

dev_dependencies:
  mek_lints: ^4.0.0

  build_runner: ^2.4.8
  mek_data_class_generator: ^1.5.1

flutter:
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: GitleIcons
      fonts:
        - asset: assets/fonts/GitleIcons.ttf

  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

# https://pub.dev/packages/flutter_launcher_icons
flutter_launcher_icons:
  image_path: _/launcher_icons/gitle_circle.png
  macos: { generate: true }
  windows: { generate: true }
